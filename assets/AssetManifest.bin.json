"DQ4HH2Fzc2V0cy9mb250cy9DYW52YVNhbnMtQm9sZC50dGYMAQ0BBwVhc3NldAcfYXNzZXRzL2ZvbnRzL0NhbnZhU2Fucy1Cb2xkLnR0ZgciYXNzZXRzL2ZvbnRzL0NhbnZhU2Fucy1SZWd1bGFyLnR0ZgwBDQEHBWFzc2V0ByJhc3NldHMvZm9udHMvQ2FudmFTYW5zLVJlZ3VsYXIudHRmByNhc3NldHMvZm9udHMvRGFuY2luZ1NjcmlwdC1Cb2xkLnR0ZgwBDQEHBWFzc2V0ByNhc3NldHMvZm9udHMvRGFuY2luZ1NjcmlwdC1Cb2xkLnR0ZgclYXNzZXRzL2ZvbnRzL0RhbmNpbmdTY3JpcHQtTWVkaXVtLnR0ZgwBDQEHBWFzc2V0ByVhc3NldHMvZm9udHMvRGFuY2luZ1NjcmlwdC1NZWRpdW0udHRmByZhc3NldHMvZm9udHMvRGFuY2luZ1NjcmlwdC1SZWd1bGFyLnR0ZgwBDQEHBWFzc2V0ByZhc3NldHMvZm9udHMvRGFuY2luZ1NjcmlwdC1SZWd1bGFyLnR0ZgcnYXNzZXRzL2ZvbnRzL0RhbmNpbmdTY3JpcHQtU2VtaUJvbGQudHRmDAENAQcFYXNzZXQHJ2Fzc2V0cy9mb250cy9EYW5jaW5nU2NyaXB0LVNlbWlCb2xkLnR0ZgcwYXNzZXRzL2ZvbnRzL0ZvbnRzRnJlZS1OZXQtTW9udHNlcnJhdC1NZWRpdW0udHRmDAENAQcFYXNzZXQHMGFzc2V0cy9mb250cy9Gb250c0ZyZWUtTmV0LU1vbnRzZXJyYXQtTWVkaXVtLnR0ZgcgYXNzZXRzL2ZvbnRzL01vbnRzZXJyYXQtQm9sZC50dGYMAQ0BBwVhc3NldAcgYXNzZXRzL2ZvbnRzL01vbnRzZXJyYXQtQm9sZC50dGYHNGFzc2V0cy9mb250cy9Nb250c2VycmF0LUl0YWxpYy1WYXJpYWJsZUZvbnRfd2dodC50dGYMAQ0BBwVhc3NldAc0YXNzZXRzL2ZvbnRzL01vbnRzZXJyYXQtSXRhbGljLVZhcmlhYmxlRm9udF93Z2h0LnR0ZgctYXNzZXRzL2ZvbnRzL01vbnRzZXJyYXQtVmFyaWFibGVGb250X3dnaHQudHRmDAENAQcFYXNzZXQHLWFzc2V0cy9mb250cy9Nb250c2VycmF0LVZhcmlhYmxlRm9udF93Z2h0LnR0ZgchYXNzZXRzL2ZvbnRzL1BvbnlDbHViLVJlZ3VsYXIudHRmDAENAQcFYXNzZXQHIWFzc2V0cy9mb250cy9Qb255Q2x1Yi1SZWd1bGFyLnR0ZgcnYXNzZXRzL21lZGlhL2Jsb2JfaHR0cHNfX193d3cuY2FudmEucG5nDAENAQcFYXNzZXQHJ2Fzc2V0cy9tZWRpYS9ibG9iX2h0dHBzX19fd3d3LmNhbnZhLnBuZwcycGFja2FnZXMvY3VwZXJ0aW5vX2ljb25zL2Fzc2V0cy9DdXBlcnRpbm9JY29ucy50dGYMAQ0BBwVhc3NldAcycGFja2FnZXMvY3VwZXJ0aW5vX2ljb25zL2Fzc2V0cy9DdXBlcnRpbm9JY29ucy50dGYHMXBhY2thZ2VzL2ljb25zYXhfZmx1dHRlci9mb250cy9GbHV0dGVySWNvbnNheC50dGYMAQ0BBwVhc3NldAcxcGFja2FnZXMvaWNvbnNheF9mbHV0dGVyL2ZvbnRzL0ZsdXR0ZXJJY29uc2F4LnR0Zg=="